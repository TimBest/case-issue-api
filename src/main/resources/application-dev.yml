spring:
  profiles:
    include:
    - local
logging:
  level:
      # NOTE: add any of the below in application-local.yml to turn on something interesting
      #       (the first two are hibernate SQL query logging, which is pretty verbose, and hibernate
      #       input and output value logging, which is *incredibly* verbose).
      # org.hibernate.SQL: DEBUG
      # org.hibernate.type: TRACE
      # org.springframework.data.rest=DEBUG
      gov.usds: DEBUG
web-customization:
  cors-origins:
    - http://localhost:3000
    - http://localhost:3001
  users:
    - name: admin
      grants:
        - READ_CASES
        - UPDATE_CASES
        - UPDATE_STRUCTURE
    - name: boring_user
      grants:
        - READ_CASES
        - UPDATE_CASES
    - name: service
      grants:
        - UPDATE_ISSUES
access-log-format: combined
sample-data:
  case-management-systems:
    -
      name: Default Case Management System
      tag: DEFAULT
      description: Fictional System for tests and demos.
      application-url: http://default.my-agency.example.gov
      case-details-url-template: http://default.my-agency.example.gov/cases?case=
    -
      name: Other Case Management System
      tag: OTHER
      description: Empty system for tests and demos.
      application-url: http://legacy-system.my-agency.example.gov
      case-details-url-template: http://archives.my-agency.example.gov/casedetails/
  case-types:
    -
      name: Standard Case
      tag: STANDARD
      description: The type of case that is loaded for tests and demos.
    -
      name: Non-standard Case
      tag: WEIRD
      description: The type of case that is loaded for tests and demos but isn't standard.
  note-subtypes:
    -
      name: Trouble Ticket
      tag: troubleticket
      note-type: LINK
      url-template: http://tickets.example.com/ticket/%s/details
    -
      name: Assignee
      tag: assignee
      note-type: TAG
      description: Who is the case assigned to?
